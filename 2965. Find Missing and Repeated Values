class Solution {
    public int[] findMissingAndRepeatedValues(int[][] grid) {
        int n = grid.length;
        int size = n * n;
        int[] flatArray = new int[size];
        int index = 0;

        // Step 1: Flatten the 2D grid into a 1D array
        for (int[] row : grid) {
            for (int num : row) {
                flatArray[index++] = num;
            }
        }

        // Step 2: Sort the array
        Arrays.sort(flatArray);

        int duplicate = -1, missing = -1;

        // Step 3: Find the duplicate and missing number
        for (int i = 0; i < size - 1; i++) {
            if (flatArray[i] == flatArray[i + 1]) {
                duplicate = flatArray[i]; // Found the duplicate
            }
        }

        // Step 4: Find the missing number
        for (int i = 1; i <= size; i++) {
            if (Arrays.binarySearch(flatArray, i) < 0) {
                missing = i; // Found the missing number
                break;
            }
        }

        return new int[]{duplicate, missing};
    }
}
